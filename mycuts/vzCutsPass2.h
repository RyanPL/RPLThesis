#ifndef VZ_CUTS_PASS2_H
#define VZ_CUTS_PASS2_H

/******* Created by Krishna Adhikari on 2/8/16
 *    Arrays are from text files found here: https://www.jlab.org/Hall-B//secure/eg4/adhikari/Analysis/Pass2/Cuts/Fid/ThCorln/EcVzCuts/
 * 
 *  Since there were bins which didn't have not enough or no data/statistics to do
 *     good Gaussian fits, so I have picked up the last good value for
 *     all the higher bins (or lowest good value for all the lower bins, 
 *     if any)
 *  For example, the 0th Q2-bin is ignored but it still has some data in it
 *    and I copied the lowest value of both Mean and Sigma and assigned that
 *    to the 0th bin to make the code consistent and have no issue during
 *    the data analysis run. 
 *
 * Update: 
 *    added cuts for Ebi=0,3,4 which hadn't been done before (due to my focus on 1.3 and 2.0 GeV ND3 data)
 *    5/30/17: SigmaVzExp[0][41]th sub-array had only 40 initializers (Thanks a lot Dr. X. Zheng for finding it)
 *             Although, that wouldn't affect anything (because we don't have any data on those bins), I now 
 *             added one more 0.710217 to make them consistent.
***/


double MeanVzExp[5][41] = {  //[5] for Eb indices, 40 for Q2-bin indices (1 to 40), 0th bin added by hand
  {-100.13,        -100.13,-100.354,-100.337,-99.7852,-99.5993,-99.7548,-99.7448,-99.8594,-99.9903,-100.165,-100.289,-100.391,-100.478,-100.526,-100.567,-100.602,-100.611,-100.652,-100.688,-100.713,     -100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713,-100.713}, //1.0 GeV
 
  {-100.37,       -100.37,-100.032,-100.027,-100.115,-100.354,-100.196,-99.8058,-99.8212,-99.8839,-100.015,-100.145,-100.259,-100.389,-100.487,-100.562,-100.63,-100.655,-100.692,-100.707,-100.705,-100.735,-100.767,-100.765,    -100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765,-100.765}, //1.3 ND3 Sim. data
 
  {-101.992,      -101.992,-101.502,-100.876,-100.297,-99.9324,-99.8489,-99.8707,-99.9926,-100.174,-100.281,-99.9533,-99.9526,-100.068,-100.138,-100.264,-100.376,-100.509,-100.604,-100.675,-100.721,-100.759,-100.8,-100.827,-100.819,-100.844,-100.839,     -100.839,-100.839,-100.839,-100.839,-100.839,-100.839,-100.839,-100.839,-100.839,-100.839,-100.839,-100.839,-100.839,-100.839}, //2.0 ND3 Sim. data

  {-101.179,-101.179,-101.179,       -101.179,-100.548,-100.009,-99.7286,-99.6658,-99.7154,-99.8208,-99.9436,-99.8711,-99.8034,-99.8897,-99.9648,-100.075,-100.219,-100.32,-100.439,-100.521,-100.611,-100.643,-100.703,-100.73,-100.75,-100.749,-100.787,-100.802,              -100.802,-100.802,-100.802,-100.802,-100.802,-100.802,-100.802,-100.802,-100.802,-100.802,-100.802,-100.802,-100.802}, //2.3 GeV

  {-102.257,-102.257,-102.257,-102.257,     -102.257,-101.698,-101.094,-100.548,-100.359,-100.272,-100.275,-100.321,-100.384,-100.338,-100.359,-100.448,-100.489,-100.576,-100.655,-100.749,-100.792,-100.851,-100.881,-100.906,-100.93,-100.921,-100.896,-100.922,-100.958,       -100.958,-100.958,-100.958,-100.958,-100.958,-100.958,-100.958,-100.958,-100.958,-100.958,-100.958,-100.958}//3.0 GeV
};

double SigmaVzExp[5][41] = {  //[5] for Eb indices, 40 for Q2-bin indices (1 to 40), 0th bin added by hand
  {2.79241,       2.79241,2.37209,2.1872,2.01305,1.92459,1.83234,1.64616,1.3949,1.27477,1.13792,1.10298,0.984276,0.905187,0.828131,0.802066,0.759656,0.737556,0.648511,0.62065,0.710217,   0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217,0.710217}, //1.0 GeV
 
  {3.18111,       3.18111,2.86471,2.62998,2.35472,2.1753,1.9033,1.83508,1.75068,1.6511,1.38593,1.23502,1.14177,1.03896,0.962683,0.873898,0.820956,0.769281,0.727629,0.690332,0.671877,0.625583,0.598984,0.509776,          0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776,0.509776}, //1.3 ND3 Sim. data
 
  {4.03834,       4.03834,3.56678,3.14893,2.90338,2.65718,2.43109,2.20883,2.00364,1.83663,1.66694,1.54911,1.46707,1.36721,1.18865,1.05129,0.967425,0.881593,0.834986,0.758164,0.705901,0.672366,0.652836,0.623498,0.582981,0.59839,0.559215,             0.559215,0.559215,0.559215,0.559215,0.559215,0.559215,0.559215,0.559215,0.559215,0.559215,0.559215,0.559215,0.559215,0.559215}, //2.0 ND3 Sim. data

  {3.54705,3.54705,3.54705,         3.54705,3.0243,2.80931,2.56073,2.34354,2.12358,1.96211,1.75637,1.59462,1.49119,1.37435,1.28571,1.11513,1.00684,0.955892,0.874917,0.826277,0.746498,0.706622,0.67227,0.664609,0.600533,0.599677,0.617628,0.580639,          0.580639,0.580639,0.580639,0.580639,0.580639,0.580639,0.580639,0.580639,0.580639,0.580639,0.580639,0.580639,0.580639}, //2.3 GeV

  {3.35636,3.35636,3.35636,3.35636,          3.35636,3.04362,2.72368,2.46073,2.28043,2.08951,1.90267,1.73089,1.51226,1.40697,1.28474,1.15582,1.05806,0.973264,0.928869,0.824182,0.792544,0.718796,0.674746,0.659319,0.634721,0.623595,0.592938,0.549619,         0.549619,0.549619,0.549619,0.549619,0.549619,0.549619,0.549619,0.549619,0.549619,0.549619,0.549619,0.549619,0.549619} //3.0 GeV
};

/*double Bins[53] = {0.000919, 0.00110, 0.00131, 0.00156, 0.00187, 0.00223, 0.00266, 0.00317,
		   0.00379, 0.00452, 0.00540, 0.00645, 0.00770, 0.00919, 0.0110, 0.0131,
		   0.0156, 0.187, 0.0223, 0.0266, 0.0317, 0.0379, 0.0452, 0.0540, 0.0645,
		   0.0770, 0.0919, 0.110, 0.131, 0.156, 0.187, 0.223, 0.266, 0.317, 0.379,
		   0.452, 0.540, 0.645, 0.770, 0.919, 1.10, 1.31, 1.56, 1.87, 2.23, 2.66,
		   3.17, 3.79, 4.52, 5.40, 6.45, 7.70, 9.19};*/


//Input parameters Ebi=0,1,2,3,4,  and Q2 and Vz obatained or evaluated after all the kinematic corrections.
bool vzCutsInQ2Bins(int Ebi, double ppC, double thetaRadC, double Vz)
{
  /**/double Ebg[5] = {1.0539, 1.339, 1.9889, 2.256, 2.999};
  double Eb=Ebg[Ebi]-0.002; //incoming energy-loss corrected beam energy
  double theta=thetaRadC, VzCut1=0.0, VzCut2=0.0;
  double Q2min=0.0,Q2max=0.0, Q2=4*Eb*ppC*pow(sin(theta/2),2.0);  
  int Q2bin=-1; bool sfCt=false, eciCt=false;  double NumOfSigma=3.0;
  Q2bin = GetQ2Index(Q2, Q2min, Q2max); //Input is Q2 and outputs are Q2index, Q2min and Q2max 
  if(Q2bin>-1 && Q2bin<41)
    {
      if( (Ebi<2 && Q2bin<4) ||  (Ebi>1 && Q2bin<7) ) NumOfSigma=2.0; 
      else NumOfSigma=3.0;
      VzCut1 = MeanVzExp[Ebi][Q2bin] - NumOfSigma*SigmaVzExp[Ebi][Q2bin];
      VzCut2 = MeanVzExp[Ebi][Q2bin] + NumOfSigma*SigmaVzExp[Ebi][Q2bin];
      if(Vz>VzCut1 && Vz<VzCut2) return true; else return false;
    }
  else return false;
}

/*int GetQ2Index(double Q2, double Q2min, double Q2max){
  for(int i = 0; i<53; i++){
    if(Q2 > Bins[i]){
      if(i == 52){
        Q2max = 10.97;
      }
      else
        Q2max = Bins[i+1];
      Q2min = Bins[i];
      return i;
    }
  }
  return 0;
}*/

#endif
